# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import quotes_pb2 as quotes__pb2


class QuotesServerStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AccessToTheMarket = channel.unary_stream(
        '/Quotes.QuotesServer/AccessToTheMarket',
        request_serializer=quotes__pb2.Subscription.SerializeToString,
        response_deserializer=quotes__pb2.Quote.FromString,
        )


class QuotesServerServicer(object):
  """The greeting service definition.
  """

  def AccessToTheMarket(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QuotesServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AccessToTheMarket': grpc.unary_stream_rpc_method_handler(
          servicer.AccessToTheMarket,
          request_deserializer=quotes__pb2.Subscription.FromString,
          response_serializer=quotes__pb2.Quote.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Quotes.QuotesServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
